{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"https://localhost:7255\";\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/item`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n\n    //TODO\n    return {};\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    axios.put(`${apiUrl}/item/${id}`, {\n      \"id\": 0,\n      \"name\": \"string\",\n      \"isComplete\": is\n      // name: 'New Item Name',\n      // description: 'New Item Description'\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log('update');\n      return response.data;\n    }).catch(err => console.log(err));\n\n    //TODO\n    // return {};\n  },\n\n  deleteTask: async id => {\n    // console.log('deleteTask')\n    axios.delete(`${apiUrl}/item/${id}`).then(response => {\n      console.log('deleteTask');\n      return response.data;\n    }).catch(err => console.log(err));\n  }\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","console","log","setCompleted","id","isComplete","put","is","headers","then","response","catch","err","deleteTask","delete"],"sources":["C:/Users/user1/Desktop/תכנות שנה ב/סי שארפ/TodoList Project/ToDoListReact/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"https://localhost:7255\"\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/item`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    \n    //TODO\n    return {};\n  },\n\n  setCompleted: async(id, isComplete)=>{\n    console.log('setCompleted', {id, isComplete})\n    axios.put(`${apiUrl}/item/${id}`,{\n      \"id\": 0,\n      \"name\": \"string\",\n      \"isComplete\": is\n      // name: 'New Item Name',\n      // description: 'New Item Description'\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response=>{\n      console.log('update');\n      return response.data;\n   })\n   .catch(err=>console.log(err));\n\n    //TODO\n    // return {};\n  },\n\n  deleteTask:async(id)=>{\n    // console.log('deleteTask')\n    axios.delete(`${apiUrl}/item/${id}`)\n    .then(response=>{\n       console.log('deleteTask');\n       return response.data;\n    })\n    .catch(err=>console.log(err));\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,wBAAwB;AAEvC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,MAAO,OAAM,CAAC;IAChD,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;;IAE5B;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAEDG,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACE,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7CZ,KAAK,CAACa,GAAG,CAAE,GAAEZ,MAAO,SAAQU,EAAG,EAAC,EAAC;MAC/B,IAAI,EAAE,CAAC;MACP,MAAM,EAAE,QAAQ;MAChB,YAAY,EAAEG;MACd;MACA;IACF,CAAC,EAAE;MACDC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAE;MACdT,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrB,OAAOQ,QAAQ,CAACZ,IAAI;IACvB,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAEX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC,CAAC;;IAE5B;IACA;EACF,CAAC;;EAEDC,UAAU,EAAC,MAAMT,EAAE,IAAG;IACpB;IACAX,KAAK,CAACqB,MAAM,CAAE,GAAEpB,MAAO,SAAQU,EAAG,EAAC,CAAC,CACnCK,IAAI,CAACC,QAAQ,IAAE;MACbT,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,OAAOQ,QAAQ,CAACZ,IAAI;IACvB,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAEX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC,CAAC;EAC/B;AACF,CAAC"},"metadata":{},"sourceType":"module"}